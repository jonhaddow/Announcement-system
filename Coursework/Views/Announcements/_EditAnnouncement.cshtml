@model Coursework.Models.Announcement

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "editForm" }))
{
    @Html.AntiForgeryToken()
    <div class="announcement-heading">
        @Html.HiddenFor(model => model.Id)
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div id="headerLine">
            <i id="arrowBack" class="material-icons">arrow_back</i>
            <h2>Edit Announcement</h2>
        </div>
        <div class="title-info form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control titleEdit" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control contentTextArea" } })
        @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
    </div>
    <div class="form-group form-inline">
        @Html.LabelFor(model => model.Important, htmlAttributes: new { @class = "control-label" })
        <div class="checkbox">
            @Html.EditorFor(model => model.Important)
            @Html.ValidationMessageFor(model => model.Important, "", new { @class = "text-danger" })
        </div>
    </div>
    <button id="updateAnnouncementButton" class="btn btn-primary" type="submit">
        Update
    </button>
    <button id="deleteAnnouncementButton" class="btn btn-danger" type="button">
        Delete
    </button>
}
<script src="~/Scripts/bootbox.min.js"></script>
<script src="~/CustomScripts/EditAnnouncement.js"></script>
@Scripts.Render("~/bundles/jqueryval")
