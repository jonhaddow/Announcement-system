@model Coursework.Models.Announcement

<div id="displayAnnouncement" class="selected-announcement">
    <div class="announcement-heading">
        <div class="title-info">
            <h2>@Html.DisplayFor(a => a.Title)</h2>
            <span class="author">
                - @Html.DisplayFor(a => a.User.UserName)
            </span>
        </div>
        @if (ViewBag.isLecturer)
        {
            <div class="modify-container">
                @Ajax.ActionLink("remove_red_eye", "GetStudentsSeen", "Announcements", new { announcementId = @Model.Id }, new AjaxOptions
           {
               HttpMethod = "Get",
               InsertionMode = InsertionMode.Replace,
               LoadingElementId = "loadingSpinner",
               UpdateTargetId = "displayAnnouncement"
           }, new { @class = "material-icons get-students-seen-icon" })
                @Ajax.ActionLink("edit", "Edit", "Announcements", new { announcementId = @Model.Id }, new AjaxOptions
           {
               HttpMethod = "Get",
               InsertionMode = InsertionMode.Replace,
               LoadingElementId = "loadingSpinner",
               UpdateTargetId = "displayAnnouncement"
           }, new { @class = "material-icons edit-icon" })
            </div>
        }
    </div>
    <div class=announcement-content>@Html.DisplayFor(a => a.Content)</div>

</div>

<div id="displayComments" class="announcement-comments">
    <h3 class="comments-heading">Comments</h3>
    <div id="comments">@Html.Action("GetComments", "Comments", new { announcementId = Model.Id })</div>
    <div id="addComment">
        @Html.Action("CreateView", "Comments", new { announcementId = Model.Id })
    </div>
</div>

<script src="~/CustomScripts/SelectedAnnouncement.js"></script>
